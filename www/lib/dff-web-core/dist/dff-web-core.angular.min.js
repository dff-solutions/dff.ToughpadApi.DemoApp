!function(){"use strict";angular.module("dff.app.com",["dff.log","dff.idb","dff.settings","dff.app.idb.store","dff.app.cordova.connection"]).value("dffAppShuttle",dff.app.com.Shuttle).value("dffAppHeartbeatTicket",dff.app.com.HeartbeatTicket).factory("dffIncomingMessageBroadcaster",["$rootScope",function(e){var t={};return t.onIncomingMessage=function(t){e.$broadcast("incomingMessage",t)},t}]).provider("dffShuttleService",function(){var e=[];this.addMessageIncomingListener=function(t){e.push(t)},this.$get=["$injector","dffLoggingService","dffSettingsService","dffAppConnectionService","dffIdbIndexedDBService","dffMessageOutgoingStore","dffMessageIncomingStore","dffLogfileStore",function(t,n,r,f,i,o,a,c){var d=[];return e.forEach(function(e){"string"==typeof e?d.push(t.get(e)):d.push(e)}),new dff.app.com.ShuttleService(n,r,f,i,o,a,c,d)}]}).config(["dffShuttleServiceProvider",function(e){e.addMessageIncomingListener("dffIncomingMessageBroadcaster")}]).run(["$rootScope","dffShuttleService",function(e,t){e.$on("connectionChange",function(e,n){t.onConnectionChange(n)})}]),angular.module("dff.app.idb.store",["dff.idb","dff.idb.store"]).provider("dffLogfileStore",function(){var e="Logfile",t="readwrite";this.setName=function(t){e=t},this.setAccess=function(e){t=e},this.$get=["dffIdbIndexedDBService",function(n){return n.getObjectStore(e,t)}]}).provider("dffMessageOutgoingStore",function(){var e="MessageOutgoing",t="readwrite";this.setName=function(t){e=t},this.setAccess=function(e){t=e},this.$get=["dffIdbIndexedDBService",function(n){return n.getObjectStore(e,t)}]}).provider("dffMessageIncomingStore",function(){var e="MessageIncoming",t="readwrite";this.setName=function(t){e=t},this.setAccess=function(e){t=e},this.$get=["dffIdbIndexedDBService",function(n){return n.getObjectStore(e,t)}]}),angular.module("dff.app.log",["dff.app.idb.store"]).provider("dffLoggingStoreInterceptor",function(){var e=!1;this.setStoreDebug=function(t){e=!!t},this.$get=["$log","dffLogfileStore",function(t,n){return new dff.app.log.LoggingStoreInterceptor(t,n,e)}]}),angular.module("dff.datetime",[]).provider("dffDateTimeService",function(){var e="yyyy-MM-dd HH:mm:ss";this.setDefaultFormat=function(t){e=t},this.$get=["dateFilter",function(t){return dff.datetime.DateTimeService.prototype.getFormatedDate=function(n){return n?t(this.getDate(),n):t(this.getDate(),e)},new dff.datetime.DateTimeService}]}),angular.module("dff.dom",[]).factory("dffDomMutationObserverService",function(){return new dff.dom.MutationObserverService}).directive("dffDomMutationObserver",["dffDomMutationObserverService",function(e){function t(t,n,r){var f=r.dffDomMutationObserver.split(","),i={childList:!1,attributes:!1,characterData:!1,subtree:!1,attributeOldValue:!1,characterDataOldValue:!1};f.indexOf("childList")>=0&&(i.childList=!0),f.indexOf("attributes")>=0&&(i.attributes=!0),f.indexOf("characterData")>=0&&(i.characterData=!0),f.indexOf("subtree")>=0&&(i.subtree=!0),f.indexOf("attributeOldValue")>=0&&(i.attributeOldValue=!0),f.indexOf("characterDataOldValue")>=0&&(i.characterDataOldValue=!0),e.observe(n[0],i)}return{priority:9999,link:t}}]),angular.module("dff.gps.tools",[]).provider("dffGpsToolsService",function(){var e;this.setEarthRadius=function(t){e=t},this.$get=function(){return new dff.gps.tools.ToolsService(e)}}),angular.module("dff.idb",[]).provider("dffIdbIndexedDBService",function(){var e="dff-app",t=1,n=[];this.setVersion=function(e){t=e},this.setDBName=function(t){e=t},this.addUpgradeInterceptor=function(e){n.push(e)},this.$get=["$log",function(r){return new dff.idb.IndexedDBService(e,t,n,r)}]}),angular.module("dff.idb.store",["dff.idb"]).provider("dffSettingsStore",function(){var e="Settings",t="readwrite";this.setName=function(t){e=t},this.setAccess=function(e){t=e},this.$get=["dffIdbIndexedDBService",function(n){return n.getObjectStore(e,t)}]}).provider("dffDataStore",function(){var e="Data",t="readwrite";this.setName=function(t){e=t},this.setAccess=function(e){t=e},this.$get=["dffIdbIndexedDBService",function(n){return n.getObjectStore(e,t)}]}),angular.module("dff.iso.3166",[]).factory("dffIso3166CodeService",function(){return new dff.iso[3166].CodeService}),angular.module("dff.log",["dff.datetime"]).value("Logtype",dff.log.Logtype).value("Logline",dff.log.Logline).provider("dffLoggingService",function(){var e=[];this.addInterceptor=function(t){e.push(t)},this.$get=["$injector","$log","dffDateTimeService",function(t,n,r){var f=[];return e.forEach(function(e){"string"==typeof e?f.push(t.get(e)):f.push(e)}),new dff.log.LoggingService(n,f,r)}]}),angular.module("dff.settings",["dff.idb.store"]).value("dffDefaultSettings",{}).factory("dffSettingsService",["dffSettingsStore","dffDefaultSettings",function(e,t){return new dff.settings.SettingsService(e,t)}]),angular.module("dff.start",[]).provider("dffStartService",function(){var e=[];this.registerService=function(t,n){return e.push({service:t,priority:isNaN(n)?0:n}),this},this.$get=["$injector","dffLoggingService",function(t,n){var r={};return e.sort(function(e,t){return t.priority-e.priority}),r.start=function(){return e.reduce(function(e,r){return e.then(function(){var e=t.get(r.service);return n.info("dffStartService","starting service",r.service,r.priority),e.hasOwnProperty("startService")?e.startService():Promise.reject("dffStartService error starting "+r.service+". startService() method not defined")})},Promise.resolve())},r}]}),angular.module("dff.storage",[]).factory("dffStorageService",["$window",function(e){return new dff.storage.StorageService(e)}]),angular.module("dff.util",[]).constant("guid",dff.util.guid),angular.module("dff.app.cordova.common",["dff.log"]).factory("dffCommonPluginService",["$window","dffLoggingService","Logtype",function(e,t,n){return new dff.app.cordova.common.PluginService(e,t,n)}]),angular.module("dff.app.cordova.connection",["dff.log"]).provider("dffAppConnectionService",function(){var e=[],t=[];this.addConnectionChangeListener=function(t){e.push(t)},this.addServerConnectionChangeListener=function(e){t.push(e)},this.$get=["$injector","$window","dffLoggingService",function(n,r,f){var i=[],o=[];return e.forEach(function(e){"string"==typeof e?i.push(n.get(e)):i.push(e)}),t.forEach(function(e){"string"==typeof e?o.push(n.get(e)):o.push(e)}),new dff.app.cordova.connection.ConnectionService(r,f,i,o)}]}).factory("dffAppConnectionListener",["$rootScope",function(e){var t={onConnectionChange:function(t){e.$apply(),e.$broadcast("connectionChange",t)},onServerConnectionChange:function(t){e.$apply(),e.$broadcast("serverConnectionChange",t)}};return t}]).config(["dffAppConnectionServiceProvider",function(e){e.addConnectionChangeListener("dffAppConnectionListener"),e.addServerConnectionChangeListener("dffAppConnectionListener")}]),angular.module("dff.app.cordova.telephony",["dff.log"]).provider("dffTelephonyService",function(){var e=[],t="";this.addCallStateChangedListener=function(t){e.push(t)},this.setCallprefix=function(e){t=e},this.$get=["$injector","$window","Logtype","dffLoggingService",function(n,r,f,i){var o=[];return e.forEach(function(e){"string"==typeof e?o.push(n.get(e)):o.push(e)}),new dff.app.cordova.telephony.TelephonyService(r,f,i,o,t)}]}),angular.module("dff.app.cordova.wifi.manager",["dff.log"]).factory("dffWifiStateLogger",["dffLoggingService",function(e){return new dff.app.cordova.wifi.manager.WifiStateLogger(e)}]).factory("dffNetworkStateLogger",["dffLoggingService",function(e){return new dff.app.cordova.wifi.manager.NetworkStateLogger(e)}]).factory("dffScanResultsLogger",["dffLoggingService",function(e){return new dff.app.cordova.wifi.manager.ScanResultsLogger(e)}]).provider("dffWifiManagerService",function(){var e=[],t=[],n=[];this.addNetworkStateChangeListener=function(t){e.push(t)},this.addWifiStateChangeListener=function(e){t.push(e)},this.addScanResultsListener=function(e){n.push(e)},this.$get=["$injector","$window","dffLoggingService",function(r,f,i){var o=[],a=[],c=[];return e.forEach(function(e){"string"==typeof e?o.push(r.get(e)):o.push(e)}),t.forEach(function(e){"string"==typeof e?a.push(r.get(e)):a.push(e)}),n.forEach(function(e){"string"==typeof e?c.push(r.get(e)):c.push(e)}),new dff.app.cordova.wifi.manager.Service(f,i,o,a,c)}]}),angular.module("dff.app.packagepay",["dff.log"]).value("dffPackagepayPayment",dff.app.packagepay.Payment).value("dffPackagepayLogistician",dff.app.packagepay.Logistician).value("dffPackagepayPackage",dff.app.packagepay.Package).value("dffPackagepayEndOfTour",dff.app.packagepay.EndOfTour).value("dffPackagepayCardType",dff.app.packagepay.CardType).value("dffPackagepayCustomerType",dff.app.packagepay.CustomerType).value("dffPackagepayGirocardProcess",dff.app.packagepay.GirocardProcess).value("dffPackagepayGirocardProcessing",dff.app.packagepay.GirocardProcessing).value("dffPackagepayPaymentResult",dff.app.packagepay.PaymentResult).value("dffPackagepayProcessType",dff.app.packagepay.ProcessType).value("dffPackagepayWHAT",dff.app.packagepay.WHAT).value("dffPackagepayVERIFY_ERROR",dff.app.packagepay.VERIFY_ERROR).factory("dffPackagepayIncomingMessageLogger",["dffLoggingService",function(e){return new dff.app.packagepay.IncomingMessageLogger(e)}]).factory("dffPackagepayServiceConnectionLogger",["dffLoggingService",function(e){return new dff.app.packagepay.ServiceConnectionLogger(e)}]).provider("dffPackagepayService",function(){var e=[],t=[];this.addIncomingMessageListener=function(t){e.push(t)},this.addServiceConnectionChangeListener=function(e){t.push(e)},this.$get=["$injector","$window","dffLoggingService","Logtype",function(n,r,f,i){var o=[],a=[];return e.forEach(function(e){"string"==typeof e?o.push(n.get(e)):o.push(e)}),t.forEach(function(e){"string"==typeof e?a.push(n.get(e)):a.push(e)}),new dff.app.packagepay.PackagepayService(r,f,i,o,a)}]}).config(["dffPackagepayServiceProvider",function(e){e.addIncomingMessageListener("dffPackagepayIncomingMessageLogger"),e.addServiceConnectionChangeListener("dffPackagepayServiceConnectionLogger")}]),angular.module("dff.app.cordova.toughpadapi",["dff.log"]).factory("dffToughpadApiBarcodeLogger",["dffLoggingService",function(e){return new dff.app.cordova.toughpadapi.BarcodeLogger(e)}]).provider("dffToughpadApiService",function(){var e=[];this.addBarcodeListener=function(t){e.push(t)},this.$get=["$injector","$window","dffLoggingService","Logtype",function(t,n,r,f){var i=[];return e.forEach(function(e){"string"==typeof e?i.push(t.get(e)):i.push(e)}),new dff.app.cordova.toughpadapi.ToughpadApiService(n,r,f,i)}]}).config(["dffToughpadApiServiceProvider",function(e){e.addBarcodeListener("dffToughpadApiBarcodeLogger")}])}();